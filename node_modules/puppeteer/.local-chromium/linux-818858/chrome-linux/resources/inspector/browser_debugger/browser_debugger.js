import{UIString as e,Linkifier as t,Revealer as s}from"../common/common.js";import{SDKModel as i,DOMDebuggerModel as n,DebuggerModel as o,RuntimeModel as r}from"../sdk/sdk.js";import{DebuggerPausedMessage as a}from"../sources/sources.js";import{Widget as d,ListModel as l,ListControl as c,ARIAUtils as h,UIUtils as m,ContextMenu as p,Context as k,ViewManager as b,TreeOutline as u,Toolbar as g,InplaceEditor as _}from"../ui/ui.js";import{EventListenersView as f}from"../event_listeners/event_listeners.js";class E extends d.VBox{constructor(){super(!0),this.registerRequiredCSS("browser_debugger/domBreakpointsSidebarPane.css"),this.elementToCheckboxes=new WeakMap,this._emptyElement=this.contentElement.createChild("div","gray-info-message"),this._emptyElement.textContent=e.UIString("No breakpoints"),this._breakpoints=new l.ListModel,this._list=new c.ListControl(this._breakpoints,this,c.ListMode.NonViewport),this.contentElement.appendChild(this._list.element),this._list.element.classList.add("breakpoint-list","hidden"),h.markAsList(this._list.element),h.setAccessibleName(this._list.element,ls`DOM Breakpoints list`),this._emptyElement.tabIndex=-1,i.TargetManager.instance().addModelListener(n.DOMDebuggerModel,n.Events.DOMBreakpointAdded,this._breakpointAdded,this),i.TargetManager.instance().addModelListener(n.DOMDebuggerModel,n.Events.DOMBreakpointToggled,this._breakpointToggled,this),i.TargetManager.instance().addModelListener(n.DOMDebuggerModel,n.Events.DOMBreakpointsRemoved,this._breakpointsRemoved,this);for(const e of i.TargetManager.instance().models(n.DOMDebuggerModel)){e.retrieveDOMBreakpoints();for(const t of e.domBreakpoints())this._addBreakpoint(t)}this._highlightedBreakpoint=null,this._update()}createElementForItem(e){const s=document.createElement("div");s.classList.add("breakpoint-entry"),s.addEventListener("contextmenu",this._contextMenu.bind(this,e),!0),h.markAsListitem(s),s.tabIndex=-1;const i=m.CheckboxLabel.create(void 0,e.enabled),n=i.checkboxElement;n.addEventListener("click",this._checkboxClicked.bind(this,e),!1),n.tabIndex=this._list.selectedItem()===e?0:-1,this.elementToCheckboxes.set(s,n),s.appendChild(i);const o=document.createElement("div");o.classList.add("dom-breakpoint"),s.appendChild(o);const r=document.createElement("div"),a=x.get(e.type);r.textContent=a||null,h.setAccessibleName(n,ls`${a}`);const d=document.createElement("monospace");d.style.display="block",o.appendChild(d),t.Linkifier.linkify(e.node,{preventKeyboardFocus:!0,tooltip:void 0}).then(e=>{d.appendChild(e),h.setAccessibleName(n,ls`${a}: ${e.deepTextContent()}`)}),o.appendChild(r);const l=e.enabled?ls`checked`:ls`unchecked`;return e===this._highlightedBreakpoint?(s.classList.add("breakpoint-hit"),h.setDescription(s,ls`${l} breakpoint hit`),h.setDescription(n,ls`breakpoint hit`)):h.setDescription(s,l),this._emptyElement.classList.add("hidden"),this._list.element.classList.remove("hidden"),s}heightForItem(e){return 0}isItemSelectable(e){return!0}updateSelectedItemARIA(e,t){return!0}selectedItemChanged(e,t,s,i){if(s){const e=this.elementToCheckboxes.get(s);e&&(e.tabIndex=-1)}if(i){const e=this.elementToCheckboxes.get(i);if(!e)return;this.setDefaultFocusedElement(e),e.tabIndex=0,this.hasFocus()&&e.focus()}}_breakpointAdded(e){this._addBreakpoint(e.data)}_breakpointToggled(e){const t=this.hasFocus(),s=e.data;this._list.refreshItem(s),t&&this.focus()}_breakpointsRemoved(e){const t=this.hasFocus(),s=e.data;let i=-1;for(const e of s){const t=this._breakpoints.indexOf(e);t>=0&&(this._breakpoints.remove(t),i=t)}if(0===this._breakpoints.length)this._emptyElement.classList.remove("hidden"),this.setDefaultFocusedElement(this._emptyElement),this._list.element.classList.add("hidden");else if(i>=0){const e=this._breakpoints.at(i);e&&this._list.selectItem(e)}t&&this.focus()}_addBreakpoint(e){this._breakpoints.insertWithComparator(e,(e,t)=>e.type>t.type?-1:e.type<t.type?1:0),this.hasFocus()||this._list.selectItem(this._breakpoints.at(0))}_contextMenu(t,i){const n=new p.ContextMenu(i);n.defaultSection().appendItem(ls`Reveal DOM node in Elements panel`,()=>s.reveal(t.node)),n.defaultSection().appendItem(e.UIString("Remove breakpoint"),()=>{t.domDebuggerModel.removeDOMBreakpoint(t.node,t.type)}),n.defaultSection().appendItem(e.UIString("Remove all DOM breakpoints"),()=>{t.domDebuggerModel.removeAllDOMBreakpoints()}),n.show()}_checkboxClicked(e,t){e.domDebuggerModel.toggleDOMBreakpoint(e,!!t.target&&t.target.checked)}flavorChanged(e){this._update()}_update(){const e=k.Context.instance().flavor(o.DebuggerPausedDetails);if(this._highlightedBreakpoint){const e=this._highlightedBreakpoint;this._highlightedBreakpoint=null,this._list.refreshItem(e)}if(!e||!e.auxData||e.reason!==o.BreakReason.DOM)return;const t=e.debuggerModel.target().model(n.DOMDebuggerModel);if(!t)return;const s=t.resolveDOMBreakpointData(e.auxData);if(s){for(const e of this._breakpoints)e.node===s.node&&e.type===s.type&&(this._highlightedBreakpoint=e);this._highlightedBreakpoint&&this._list.refreshItem(this._highlightedBreakpoint),b.ViewManager.instance().showView("sources.domBreakpoints")}}}const x=new Map([[Protocol.DOMDebugger.DOMBreakpointType.SubtreeModified,e.UIString("Subtree modified")],[Protocol.DOMDebugger.DOMBreakpointType.AttributeModified,e.UIString("Attribute modified")],[Protocol.DOMDebugger.DOMBreakpointType.NodeRemoved,e.UIString("Node removed")]]);var v=Object.freeze({__proto__:null,DOMBreakpointsSidebarPane:E,BreakpointTypeLabels:x,ContextMenuProvider:class{appendApplicableItems(t,s,i){const o=i;if(o.pseudoType())return;const r=o.domModel().target().model(n.DOMDebuggerModel);if(!r)return;function d(e){r&&(r.hasDOMBreakpoint(o,e)?r.removeDOMBreakpoint(o,e):r.setDOMBreakpoint(o,e))}const l=s.debugSection().appendSubMenuItem(e.UIString("Break on"));for(const e of Object.values(Protocol.DOMDebugger.DOMBreakpointType)){const t=a.BreakpointTypeNouns.get(e);t&&l.defaultSection().appendCheckboxItem(t,d.bind(null,e),r.hasDOMBreakpoint(o,e))}}}});class C extends d.VBox{constructor(){super(!0),this._categoriesTreeOutline=new u.TreeOutlineInShadow,this._categoriesTreeOutline.registerRequiredCSS("browser_debugger/eventListenerBreakpoints.css"),this._categoriesTreeOutline.setShowSelectionOnKeyboardFocus(!0),this.contentElement.appendChild(this._categoriesTreeOutline.element),this._categories=new Map;const e=n.DOMDebuggerManager.instance().eventListenerBreakpoints().map(e=>e.category());e.sort();for(const t of e)this._categories.has(t)||this._createCategory(t);if(e.length>0){const t=this._categories.get(e[0]);t&&t.element.select()}this._breakpoints=new Map;for(const e of n.DOMDebuggerManager.instance().eventListenerBreakpoints())this._createBreakpoint(e);i.TargetManager.instance().addModelListener(o.DebuggerModel,o.Events.DebuggerPaused,this._update,this),i.TargetManager.instance().addModelListener(o.DebuggerModel,o.Events.DebuggerResumed,this._update,this),k.Context.instance().addFlavorChangeListener(i.Target,this._update,this)}focus(){this._categoriesTreeOutline.forceSelect()}_createCategory(e){const t=m.CheckboxLabel.create(e);t.checkboxElement.addEventListener("click",this._categoryCheckboxClicked.bind(this,e),!0),t.checkboxElement.tabIndex=-1;const s=new u.TreeElement(t);s.listItemElement.addEventListener("keydown",t=>{if(" "===t.key){const s=this._categories.get(e);s&&s.checkbox.click(),t.consume(!0)}}),t.checkboxElement.addEventListener("focus",()=>s.listItemElement.focus()),h.setChecked(s.listItemElement,!1),this._categoriesTreeOutline.appendChild(s),this._categories.set(e,{element:s,checkbox:t.checkboxElement})}_createBreakpoint(e){const t=m.CheckboxLabel.create(e.title());t.classList.add("source-code"),t.checkboxElement.addEventListener("click",this._breakpointCheckboxClicked.bind(this,e),!0),t.checkboxElement.tabIndex=-1;const s=new u.TreeElement(t);s.listItemElement.addEventListener("keydown",t=>{if(" "===t.key){const s=this._breakpoints.get(e);s&&s.checkbox.click(),t.consume(!0)}}),t.checkboxElement.addEventListener("focus",()=>s.listItemElement.focus()),h.setChecked(s.listItemElement,!1),s.listItemElement.createChild("div","breakpoint-hit-marker");const i=this._categories.get(e.category());i&&i.element.appendChild(s),this._breakpoints.set(e,{element:s,checkbox:t.checkboxElement})}_update(){const e=k.Context.instance().flavor(i.Target),t=e?e.model(o.DebuggerModel):null,s=t?t.debuggerPausedDetails():null;if(!s||s.reason!==o.BreakReason.EventListener||!s.auxData)return void(this._highlightedElement&&(h.setDescription(this._highlightedElement,""),this._highlightedElement.classList.remove("breakpoint-hit"),delete this._highlightedElement));const r=n.DOMDebuggerManager.instance().resolveEventListenerBreakpoint(s.auxData);if(!r)return;b.ViewManager.instance().showView("sources.eventListenerBreakpoints");const a=this._categories.get(r.category());a&&a.element.expand();const d=this._breakpoints.get(r);d&&(this._highlightedElement=d.element.listItemElement,h.setDescription(this._highlightedElement,ls`breakpoint hit`),this._highlightedElement.classList.add("breakpoint-hit"))}_categoryCheckboxClicked(e){const t=this._categories.get(e);if(!t)return;const s=t.checkbox.checked;h.setChecked(t.element.listItemElement,s);for(const t of this._breakpoints.keys())if(t.category()===e){t.setEnabled(s);const e=this._breakpoints.get(t);e&&(e.checkbox.checked=s)}}_breakpointCheckboxClicked(e){const t=this._breakpoints.get(e);if(!t)return;e.setEnabled(t.checkbox.checked),h.setChecked(t.element.listItemElement,t.checkbox.checked);let s=!1,i=!1;for(const t of this._breakpoints.keys())t.category()===e.category()&&(t.enabled()?s=!0:i=!0);const n=this._categories.get(e.category());n&&(n.checkbox.checked=s,n.checkbox.indeterminate=s&&i,n.checkbox.indeterminate?h.setCheckboxAsIndeterminate(n.element.listItemElement):h.setChecked(n.element.listItemElement,s))}}var M=Object.freeze({__proto__:null,EventListenerBreakpointsSidebarPane:C,Item:void 0});class B extends d.VBox{constructor(){super(),this._refreshButton=new g.ToolbarButton(ls`Refresh global listeners`,"largeicon-refresh"),this._refreshButton.addEventListener(g.ToolbarButton.Events.Click,this._refreshClick,this),this._refreshButton.setEnabled(!1),this._eventListenersView=new f.EventListenersView(this.update.bind(this),!0),this._eventListenersView.show(this.element),this.setDefaultFocusedChild(this._eventListenersView)}toolbarItems(){return[this._refreshButton]}update(){this._lastRequestedContext&&(this._lastRequestedContext.runtimeModel.releaseObjectGroup(D),delete this._lastRequestedContext);const e=k.Context.instance().flavor(r.ExecutionContext);if(!e)return this._eventListenersView.reset(),void this._eventListenersView.addEmptyHolderIfNeeded();this._lastRequestedContext=e,Promise.all([this._windowObjectInContext(e)]).then(this._eventListenersView.addObjects.bind(this._eventListenersView))}wasShown(){super.wasShown(),k.Context.instance().addFlavorChangeListener(r.ExecutionContext,this.update,this),this._refreshButton.setEnabled(!0),this.update()}willHide(){super.willHide(),k.Context.instance().removeFlavorChangeListener(r.ExecutionContext,this.update,this),this._refreshButton.setEnabled(!1)}_windowObjectInContext(e){return e.evaluate({expression:"self",objectGroup:D,includeCommandLineAPI:!1,silent:!0,returnByValue:!1,generatePreview:!1,timeout:void 0,throwOnSideEffect:void 0,disableBreaks:void 0,replMode:void 0,allowUnsafeEvalBlockedByCSP:void 0},!1,!1).then(e=>"error"in e||e.exceptionDetails?null:e.object)}_refreshClick(e){e.data.consume(),this.update()}}const D="object-event-listeners-sidebar-pane";var L=Object.freeze({__proto__:null,ObjectEventListenersSidebarPane:B,objectGroupName:D});class I extends d.VBox{constructor(){super(!0),this.registerRequiredCSS("browser_debugger/xhrBreakpointsSidebarPane.css"),this._breakpoints=new l.ListModel,this._list=new c.ListControl(this._breakpoints,this,c.ListMode.NonViewport),this.contentElement.appendChild(this._list.element),this._list.element.classList.add("breakpoint-list","hidden"),h.markAsList(this._list.element),h.setAccessibleName(this._list.element,ls`XHR/fetch Breakpoints`),this._emptyElement=this.contentElement.createChild("div","gray-info-message"),this._emptyElement.textContent=e.UIString("No breakpoints"),this._breakpointElements=new Map,this._addButton=new g.ToolbarButton(ls`Add XHR/fetch breakpoint`,"largeicon-add"),this._addButton.addEventListener(g.ToolbarButton.Events.Click,e=>{this._addButtonClicked()}),this._emptyElement.addEventListener("contextmenu",this._emptyElementContextMenu.bind(this),!0),this._emptyElement.tabIndex=-1,this._restoreBreakpoints(),this._update()}toolbarItems(){return[this._addButton]}_emptyElementContextMenu(t){const s=new p.ContextMenu(t);s.defaultSection().appendItem(e.UIString("Add breakpoint"),this._addButtonClicked.bind(this)),s.show()}async _addButtonClicked(){await b.ViewManager.instance().showView("sources.xhrBreakpoints");const t=document.createElement("p");t.classList.add("breakpoint-condition"),t.textContent=e.UIString("Break when URL contains:");const s=t.createChild("span","breakpoint-condition-input");function i(e,s,i){this._removeListElement(t),e&&(n.DOMDebuggerManager.instance().addXHRBreakpoint(i,!0),this._setBreakpoint(i)),this._update()}h.setAccessibleName(s,ls`URL Breakpoint`),this._addListElement(t,this._list.element.firstChild);const o=new _.Config(i.bind(this,!0),i.bind(this,!1));_.InplaceEditor.startEditing(s,o)}heightForItem(e){return 0}isItemSelectable(e){return!0}_setBreakpoint(e){-1!==this._breakpoints.indexOf(e)?this._list.refreshItem(e):this._breakpoints.insertWithComparator(e,(e,t)=>e>t?1:e<t?-1:0),this._list.selectedItem()&&this.hasFocus()||this._list.selectItem(this._breakpoints.at(0))}createElementForItem(t){const s=createElement("div");h.markAsListitem(s);const i=s.createChild("div","breakpoint-entry");s.checkboxElement=i;const o=n.DOMDebuggerManager.instance().xhrBreakpoints().get(t);h.markAsCheckbox(i),h.setChecked(i,o),i._url=t,i.addEventListener("contextmenu",this._contextMenu.bind(this,t),!0);const r=t?e.UIString('URL contains "%s"',t):e.UIString("Any XHR or fetch"),a=m.CheckboxLabel.create(r,o);return h.markAsHidden(a),h.setAccessibleName(i,r),i.appendChild(a),a.checkboxElement.addEventListener("click",this._checkboxClicked.bind(this,t,o),!1),i.addEventListener("click",e=>{e.target===i&&this._checkboxClicked(t,o)},!1),i._checkboxElement=a.checkboxElement,a.checkboxElement.tabIndex=-1,i.tabIndex=-1,t===this._list.selectedItem()&&(i.tabIndex=0,this.setDefaultFocusedElement(i)),i.addEventListener("keydown",e=>{let s=!1;" "===e.key?(this._checkboxClicked(t,o),s=!0):isEnterKey(e)&&(this._labelClicked(t),s=!0),s&&e.consume(!0)}),t===this._hitBreakpoint&&(i.classList.add("breakpoint-hit"),h.setDescription(i,ls`breakpoint hit`)),a.classList.add("cursor-auto"),a.textElement.addEventListener("dblclick",this._labelClicked.bind(this,t),!1),this._breakpointElements.set(t,s),s}selectedItemChanged(e,t,s,i){s&&(s.checkboxElement.tabIndex=-1),i&&(this.setDefaultFocusedElement(i.checkboxElement),i.checkboxElement.tabIndex=0,this.hasFocus()&&i.checkboxElement.focus())}updateSelectedItemARIA(e,t){return!0}_removeBreakpoint(e){const t=this._breakpoints.indexOf(e);t>=0&&this._breakpoints.remove(t),this._breakpointElements.delete(e),this._update()}_addListElement(e,t){this._list.element.insertBefore(e,t),this._emptyElement.classList.add("hidden"),this._list.element.classList.remove("hidden")}_removeListElement(e){this._list.element.removeChild(e),this._list.element.firstElementChild||(this._emptyElement.classList.remove("hidden"),this._list.element.classList.add("hidden"))}_contextMenu(t,s){const i=new p.ContextMenu(s);const o=e.UIString("Remove all breakpoints");i.defaultSection().appendItem(e.UIString("Add breakpoint"),this._addButtonClicked.bind(this)),i.defaultSection().appendItem(e.UIString("Remove breakpoint"),function(){n.DOMDebuggerManager.instance().removeXHRBreakpoint(t),this._removeBreakpoint(t)}.bind(this)),i.defaultSection().appendItem(o,function(){for(const e of this._breakpointElements.keys())n.DOMDebuggerManager.instance().removeXHRBreakpoint(e),this._removeBreakpoint(e);this._update()}.bind(this)),i.show()}_checkboxClicked(e,t){const s=this.hasFocus();n.DOMDebuggerManager.instance().toggleXHRBreakpoint(e,!t),this._list.refreshItem(e),this._list.selectItem(e),s&&this.focus()}_labelClicked(e){const t=this._breakpointElements.get(e)||null,s=document.createElement("span");function i(i,o,r){if(this._removeListElement(s),i){n.DOMDebuggerManager.instance().removeXHRBreakpoint(e),this._removeBreakpoint(e);const s=!t||t.checkboxElement._checkboxElement.checked;n.DOMDebuggerManager.instance().addXHRBreakpoint(r,s),this._setBreakpoint(r),this._list.selectItem(r)}else t.classList.remove("hidden");this.focus()}s.classList.add("breakpoint-condition"),s.textContent=e,this._list.element.insertBefore(s,t),t.classList.add("hidden"),_.InplaceEditor.startEditing(s,new _.Config(i.bind(this,!0),i.bind(this,!1)))}flavorChanged(e){this._update()}_update(){const e=0===this._breakpoints.length;this._list.element.classList.toggle("hidden",e),this._emptyElement.classList.toggle("hidden",!e);const t=k.Context.instance().flavor(o.DebuggerPausedDetails);if(!t||t.reason!==o.BreakReason.XHR){if(this._hitBreakpoint){const e=this._hitBreakpoint;delete this._hitBreakpoint,this._breakpoints.indexOf(e)>=0&&this._list.refreshItem(e)}return}const s=t.auxData.breakpointURL;this._hitBreakpoint=s,this._breakpoints.indexOf(s)<0||(this._list.refreshItem(s),b.ViewManager.instance().showView("sources.xhrBreakpoints"))}_restoreBreakpoints(){const e=n.DOMDebuggerManager.instance().xhrBreakpoints();for(const t of e.keys())this._setBreakpoint(t)}}var w=Object.freeze({__proto__:null,XHRBreakpointsSidebarPane:I});export{v as DOMBreakpointsSidebarPane,M as EventListenerBreakpointsSidebarPane,L as ObjectEventListenersSidebarPane,w as XHRBreakpointsSidebarPane};
