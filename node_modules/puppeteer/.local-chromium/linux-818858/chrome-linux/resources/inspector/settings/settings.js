import{UIString as e,Settings as t}from"../common/common.js";import{Reload as s}from"../components/components.js";import{userMetrics as i,InspectorFrontendHost as n,UserMetrics as r}from"../host/host.js";import{Runtime as o}from"../root/root.js";import{Widget as a,Utils as c,ARIAUtils as d,ViewManager as l,Toolbar as h,TabbedPane as m,Dialog as u,GlassPane as b,UIUtils as g,SettingsUI as p,InspectorView as _,ListWidget as S,ListModel as k,ListControl as f,ShortcutRegistry as E,KeyboardShortcut as v,ActionRegistry as C,Icon as y}from"../ui/ui.js";let x;class I extends a.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/settingsScreen.css"),this.contentElement.classList.add("settings-window-main"),this.contentElement.classList.add("vbox");const e=createElement("div"),t=c.createShadowRootWithCoreStyles(e,"settings/settingsScreen.css").createChild("div","settings-window-title");d.markAsHeading(t,1),t.textContent=ls`Settings`,this._tabbedLocation=l.ViewManager.instance().createTabbedLocation(()=>I._revealSettingsScreen(),"settings-view");const s=this._tabbedLocation.tabbedPane();s.leftToolbar().appendToolbarItem(new h.ToolbarItem(e)),s.setShrinkableTabs(!1),s.makeVerticalTabLayout(),l.ViewManager.instance().view("keybinds").widget().then(e=>{this._keybindsTab=e}),s.show(this.contentElement),s.selectTab("preferences"),s.addEventListener(m.Events.TabInvoked,this._tabInvoked,this),this._reportTabOnReveal=!1}static instance(e={forceNew:null}){const{forceNew:t}=e;return x&&!t||(x=new I),x}static _revealSettingsScreen(){const e=I.instance();if(e.isShowing())return e;e._reportTabOnReveal=!0;const t=new u.Dialog;return t.contentElement.tabIndex=-1,t.addCloseButton(),t.setOutsideClickCallback(()=>{}),t.setPointerEventsBehavior(b.PointerEventsBehavior.PierceGlassPane),t.setOutsideTabIndexBehavior(u.OutsideTabIndexBehavior.PreserveMainViewTabIndex),e.show(t.contentElement),t.setEscapeKeyCallback(e._onEscapeKeyPressed.bind(e)),t.show(),e}static async _showSettingsScreen(e={}){const{name:t,focusTabHeader:s}=e,i=I._revealSettingsScreen();i._selectTab(t||"preferences");const n=i._tabbedLocation.tabbedPane();await n.waitForTabElementUpdate(),s?n.focusSelectedTabHeader():n.focus()}resolveLocation(e){return this._tabbedLocation}_selectTab(e){this._tabbedLocation.tabbedPane().selectTab(e,!0)}_tabInvoked(e){const t=e.data;if(!t.isUserGesture)return;const s=t.prevTabId,i=t.tabId;!this._reportTabOnReveal&&s&&s===i||(this._reportTabOnReveal=!1,this._reportSettingsPanelShown(i))}_reportSettingsPanelShown(e){e!==ls`Shortcuts`?i.settingsPanelShown(e):i.settingsPanelShown("shortcuts")}_onEscapeKeyPressed(e){"keybinds"===this._tabbedLocation.tabbedPane().selectedTabId&&this._keybindsTab&&this._keybindsTab.onEscapeKeyPressed(e)}}class w extends a.VBox{constructor(e,t){super(),this.element.classList.add("settings-tab-container"),t&&(this.element.id=t);const s=this.element.createChild("header");g.createTextChild(s.createChild("h1"),e),this.containerElement=this.element.createChild("div","settings-container-wrapper").createChild("div","settings-tab settings-content settings-container")}_appendSection(e){const t=this.containerElement.createChild("div","settings-block");if(e){d.markAsGroup(t);const s=t.createChild("div","settings-section-title");s.textContent=e,d.markAsHeading(s,2),d.setAccessibleName(t,e)}return t}}class T extends w{constructor(){super(e.UIString("Preferences"),"preferences-tab-content");const i=["","Appearance","Sources","Elements","Network","Performance","Console","Extensions","Persistence","Debugger","Global"];this._nameToSection=new Map;for(const e of i)this._createSectionElement(e);o.Runtime.instance().extensions("setting").forEach(this._addSetting.bind(this)),o.Runtime.instance().extensions(p.SettingUI).forEach(this._addSettingUI.bind(this)),this._appendSection().appendChild(g.createTextButton(e.UIString("Restore defaults and reload"),(function(){t.Settings.instance().clearAll(),s.reload()})))}static isSettingVisible(e){const t=e.descriptor();return"title"in t&&"category"in t}_addSetting(e){if(!T.isSettingVisible(e))return;const s=this._sectionElement(e.descriptor().category);if(!s)return;const i=t.Settings.instance().moduleSetting(e.descriptor().settingName),n=p.createControlForSetting(i);n&&s.appendChild(n)}_addSettingUI(e){const t=e.descriptor().category||"";e.instance().then(function(e){const s=e.settingElement();if(s){let e=this._sectionElement(t);e||(e=this._createSectionElement(t)),e.appendChild(s)}}.bind(this))}_createSectionElement(t){const s=t&&e.UIString(t),i=this._appendSection(s);return this._nameToSection.set(t,i),i}_sectionElement(e){return this._nameToSection.get(e)||null}}var L=Object.freeze({__proto__:null,SettingsScreen:I,GenericSettingsTab:T,ExperimentsSettingsTab:class extends w{constructor(){super(e.UIString("Experiments"),"experiments-tab-content");const t=o.experiments.allConfigurableExperiments().sort(),s=t.filter(e=>e.unstable),i=t.filter(e=>!e.unstable);if(i.length){const t=this._appendSection(),s=e.UIString("These experiments could be unstable or unreliable and may require you to restart DevTools.");t.appendChild(this._createExperimentsWarningSubsection(s));for(const e of i)t.appendChild(this._createExperimentCheckbox(e))}if(s.length){const t=this._appendSection(),i=e.UIString("These experiments are particularly unstable. Enable at your own risk.");t.appendChild(this._createExperimentsWarningSubsection(i));for(const e of s)t.appendChild(this._createExperimentCheckbox(e))}}_createExperimentsWarningSubsection(t){const s=createElement("div");s.createChild("span","settings-experiments-warning-subsection-warning").textContent=e.UIString("WARNING:"),g.createTextChild(s," ");return s.createChild("span","settings-experiments-warning-subsection-message").textContent=t,s}_createExperimentCheckbox(t){const s=g.CheckboxLabel.create(e.UIString(t.title),t.isEnabled()),n=s.checkboxElement;n.name=t.name,n.addEventListener("click",(function(){t.setEnabled(n.checked),i.experimentChanged(t.name,t.isEnabled()),_.InspectorView.instance().displayReloadRequiredWarning(ls`One or more settings have changed which requires a reload to take effect.`)}),!1);const r=createElement("p");return r.className=t.unstable&&!t.isEnabled()?"settings-experiment-unstable":"",r.appendChild(s),r}},ActionDelegate:class{handleAction(e,t){switch(t){case"settings.show":return I._showSettingsScreen({focusTabHeader:!0}),!0;case"settings.documentation":return n.InspectorFrontendHostInstance.openInNewTab(g.addReferrerToURL("https://developers.google.com/web/tools/chrome-devtools/")),!0;case"settings.shortcuts":return I._showSettingsScreen({name:"keybinds",focusTabHeader:!0}),!0}return!1}},Revealer:class{reveal(e){console.assert(e instanceof t.Setting);const s=e;let i=!1;return o.Runtime.instance().extensions("setting").forEach((function(e){if(!T.isSettingVisible(e))return;e.descriptor().settingName===s.name&&(n.InspectorFrontendHostInstance.bringToFront(),I._showSettingsScreen(),i=!0)})),o.Runtime.instance().extensions(p.SettingUI).forEach((function(e){const t=e.descriptor().settings;t&&-1!==t.indexOf(s.name)&&(n.InspectorFrontendHostInstance.bringToFront(),I._showSettingsScreen(),i=!0)})),o.Runtime.instance().extensions("view").forEach((function(e){if("settings-view"!==e.descriptor().location)return;const t=e.descriptor().settings;t&&-1!==t.indexOf(s.name)&&(n.InspectorFrontendHostInstance.bringToFront(),I._showSettingsScreen({name:e.descriptor().id}),i=!0)})),i?Promise.resolve():Promise.reject()}}});class A extends a.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/frameworkBlackboxSettingsTab.css");const s=this.contentElement.createChild("div","header");s.textContent=ls`Framework Blackboxing`,d.markAsHeading(s,1),this.contentElement.createChild("div","intro").textContent=ls`Debugger will skip through the scripts and will not stop on exceptions thrown by them.`;const i=this.contentElement.createChild("div","blackbox-content-scripts");i.appendChild(p.createSettingCheckbox(ls`Blackbox content scripts`,t.Settings.instance().moduleSetting("skipContentScripts"),!0)),i.title=ls`Blackbox content scripts (extension scripts in the page)`,this._blackboxLabel=e.UIString("Blackbox"),this._disabledLabel=e.UIString("Disabled"),this._list=new S.ListWidget(this),this._list.element.classList.add("blackbox-list"),this._list.registerRequiredCSS("settings/frameworkBlackboxSettingsTab.css");const n=document.createElement("div");n.classList.add("blackbox-list-empty"),n.textContent=e.UIString("No blackboxed patterns"),this._list.setEmptyPlaceholder(n),this._list.show(this.contentElement);const r=g.createTextButton(e.UIString("Add pattern..."),this._addButtonClicked.bind(this),"add-button");d.setAccessibleName(r,ls`Add filename pattern`),this.contentElement.appendChild(r),this._setting=t.Settings.instance().moduleSetting("skipStackFramesPattern"),this._setting.addChangeListener(this._settingUpdated,this),this.setDefaultFocusedElement(r)}wasShown(){super.wasShown(),this._settingUpdated()}_settingUpdated(){this._list.clear();const e=this._setting.getAsArray();for(let t=0;t<e.length;++t)this._list.appendItem(e[t],!0)}_addButtonClicked(){this._list.addNewItem(this._setting.getAsArray().length,{pattern:"",disabled:!1})}renderItem(e,t){const s=document.createElement("div");s.classList.add("blackbox-list-item");const i=s.createChild("div","blackbox-pattern");return i.textContent=e.pattern,i.title=ls`Blackbox scripts whose names match '${e.pattern}'`,s.createChild("div","blackbox-separator"),s.createChild("div","blackbox-behavior").textContent=e.disabled?this._disabledLabel:this._blackboxLabel,e.disabled&&s.classList.add("blackbox-disabled"),s}removeItemRequested(e,t){const s=this._setting.getAsArray();s.splice(t,1),this._setting.setAsArray(s)}commitEdit(e,t,s){e.pattern=t.control("pattern").value.trim(),e.disabled=t.control("behavior").value===this._disabledLabel;const i=this._setting.getAsArray();s&&i.push(e),this._setting.setAsArray(i)}beginEdit(e){const t=this._createEditor();return t.control("pattern").value=e.pattern,t.control("behavior").value=e.disabled?this._disabledLabel:this._blackboxLabel,t}_createEditor(){if(this._editor)return this._editor;const t=new S.Editor;this._editor=t;const s=t.contentElement(),i=s.createChild("div","blackbox-edit-row");i.createChild("div","blackbox-pattern").textContent=e.UIString("Pattern"),i.createChild("div","blackbox-separator blackbox-separator-invisible"),i.createChild("div","blackbox-behavior").textContent=e.UIString("Behavior");const n=s.createChild("div","blackbox-edit-row"),r=t.createInput("pattern","text","/framework\\.js$",function(e,t,s){const i=s.value.trim(),n=this._setting.getAsArray();if(!i.length)return{valid:!1,errorMessage:ls`Pattern cannot be empty`};for(let e=0;e<n.length;++e)if(e!==t&&n[e].pattern===i)return{valid:!1,errorMessage:ls`Pattern already exists`};let r;try{r=new RegExp(i)}catch(e){}if(!r)return{valid:!1,errorMessage:ls`Pattern must be a valid regular expression`};return{valid:!0}}.bind(this));d.setAccessibleName(r,ls`Pattern`),n.createChild("div","blackbox-pattern").appendChild(r),n.createChild("div","blackbox-separator blackbox-separator-invisible");const o=t.createSelect("behavior",[this._blackboxLabel,this._disabledLabel],(function(e,t,s){return{valid:!0}}));return d.setAccessibleName(o,ls`Behavior`),n.createChild("div","blackbox-behavior").appendChild(o),t}}var R=Object.freeze({__proto__:null,FrameworkBlackboxSettingsTab:A});class B extends a.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/keybindsSettingsTab.css");this.contentElement.createChild("header").createChild("h1").textContent=ls`Shortcuts`;const e=t.Settings.instance().moduleSetting("activeKeybindSet"),s=t.Settings.instance().moduleSetting("userShortcuts");s.addChangeListener(this.update,this),e.addChangeListener(this.update,this);const i=p.createControlForSetting(e,ls`Match shortcuts from preset`);i.classList.add("keybinds-set-select"),this.contentElement.appendChild(i),this._items=new k.ListModel,this._list=new f.ListControl(this._items,this,f.ListMode.NonViewport),this._items.replaceAll(this._createListItems()),d.markAsList(this._list.element),this.registerRequiredCSS("settings/keybindsSettingsTab.css"),this.contentElement.appendChild(this._list.element),d.setAccessibleName(this._list.element,ls`Keyboard shortcuts list`);const n=this.contentElement.createChild("div");n.classList.add("keybinds-footer");const r=g.createDocumentationLink("iterate/inspect-styles/shortcuts",ls`Full list of DevTools keyboard shortcuts and gestures`);r.classList.add("docs-link"),n.appendChild(r),n.appendChild(g.createTextButton(ls`Restore default shortcuts`,()=>{s.set([]),e.set(E.DefaultShortcutSetting)})),this._editingItem=null,this._editingRow=null,this.update()}createElementForItem(e){let t=document.createElement("div");if("string"==typeof e)d.setLevel(t,1),t.classList.add("keybinds-category-header"),t.textContent=e;else{const s=new P(e,this,e===this._editingItem);t=s.element,d.setLevel(t,2),e===this._editingItem&&(this._editingRow=s)}return t.classList.add("keybinds-list-item"),d.markAsListitem(t),t.tabIndex=e===this._list.selectedItem()&&e!==this._editingItem?0:-1,t}commitChanges(e,t){for(const[e,s]of t)e.type!==v.Type.UnsetShortcut&&(E.ShortcutRegistry.instance().removeShortcut(e),s||i.actionTaken(r.Action.ShortcutRemoved)),s&&(E.ShortcutRegistry.instance().registerUserShortcut(e.changeKeys(s).changeType(v.Type.UserShortcut)),e.type===v.Type.UnsetShortcut?i.actionTaken(r.Action.UserShortcutAdded):i.actionTaken(r.Action.ShortcutModified));this.stopEditing(e)}heightForItem(e){return 0}isItemSelectable(e){return!0}selectedItemChanged(e,t,s,i){s&&(s.tabIndex=-1),i&&(t===this._editingItem?this._editingRow.focus():(i.tabIndex=0,this._list.element.hasFocus()&&i.focus()),this.setDefaultFocusedElement(i))}updateSelectedItemARIA(e,t){return!0}startEditing(e){this._editingItem&&this.stopEditing(this._editingItem),g.markBeingEdited(this._list.element,!0),this._editingItem=e,this._list.refreshItem(e)}stopEditing(e){g.markBeingEdited(this._list.element,!1),this._editingItem=null,this._editingRow=null,this._list.refreshItem(e),this.focus()}_createListItems(){const e=C.ActionRegistry.instance().actions().sort((e,t)=>e.category()<t.category()?-1:e.category()>t.category()?1:e.id()<t.id()?-1:e.id()>t.id()?1:0),t=[];let s;return e.forEach(e=>{s!==e.category()&&t.push(e.category()),t.push(e),s=e.category()}),t}onEscapeKeyPressed(e){this._editingRow&&"INPUT"===document.deepActiveElement().nodeName&&this._editingRow.onEscapeKeyPressed(e)}update(){this._editingItem&&this.stopEditing(this._editingItem),this._list.refreshAllItems(),this._list.selectedItem()||this._list.selectItem(this._items.at(0))}willHide(){this._editingItem&&this.stopEditing(this._editingItem)}}class P{constructor(e,t,s){this._isEditing=!!s,this._settingsTab=t,this._item=e,this.element=document.createElement("div"),this.element.classList.toggle("keybinds-editing",this._isEditing),this.element.createChild("div","keybinds-action-name keybinds-list-text").textContent=e.title();const i=E.ShortcutRegistry.instance().shortcutsForAction(e.id());this._editedShortcuts=new Map,this._shortcutInputs=new Map,this._elementToFocus=null,this._confirmButton=null,this._addShortcutLinkContainer=null,this._errorMessageElement=null,i.forEach(this._createShortcutRow,this),0===i.length&&this._createEmptyInfo(),this._isEditing&&this._setupEditor()}focus(){this._elementToFocus&&this._elementToFocus.focus()}_createEmptyInfo(){if(E.ShortcutRegistry.instance().actionHasDefaultShortcut(this._item.id())){const e=y.Icon.create("largeicon-shortcut-changed","keybinds-modified");d.setAccessibleName(e,ls`Shortcut modified`),this.element.appendChild(e)}if(!this._isEditing){const e=this.element.createChild("div","keybinds-shortcut keybinds-list-text");d.setAccessibleName(e,ls`No shortcut for action`),Root.Runtime.experiments.isEnabled("keyboardShortcutEditor")&&this.element.appendChild(this._createEditButton())}}_setupEditor(){this._addShortcutLinkContainer=this.element.createChild("div","keybinds-shortcut devtools-link");const e=this._addShortcutLinkContainer.createChild("span","devtools-link");e.textContent=ls`Add a shortcut`,e.tabIndex=0,d.markAsLink(e),this._elementToFocus||(this._elementToFocus=e),this._errorMessageElement=this.element.createChild("div","keybinds-info keybinds-error hidden"),d.markAsAlert(this._errorMessageElement),this._confirmButton=this.element.createChild("button","keybinds-confirm-button"),this._confirmButton.appendChild(y.Icon.create("largeicon-checkmark")),this._confirmButton.addEventListener("click",()=>this._settingsTab.commitChanges(this._item,this._editedShortcuts)),d.setAccessibleName(this._confirmButton,ls`Confirm changes`);const t=this.element.createChild("button","keybinds-cancel-button");t.appendChild(y.Icon.create("largeicon-delete")),t.addEventListener("click",()=>this._settingsTab.stopEditing(this._item)),this.element.addEventListener("keydown",e=>{isEscKey(e)&&(this._settingsTab.stopEditing(this._item),e.consume(!0))}),d.setAccessibleName(t,ls`Discard changes`),self.onInvokeElement(e,()=>{const e=new v.KeyboardShortcut([],this._item.id(),v.Type.UnsetShortcut);this._createShortcutRow(e),this.element.appendChild(this._addShortcutLinkContainer),this.element.appendChild(this._errorMessageElement),this.element.appendChild(this._confirmButton),this.element.appendChild(t),this._shortcutInputs.get(e).focus()})}_createShortcutRow(e,t){let s;e.type===v.Type.UnsetShortcut||e.isDefault()||(s=y.Icon.create("largeicon-shortcut-changed","keybinds-modified"),d.setAccessibleName(s,ls`Shortcut modified`),this.element.appendChild(s));const i=this.element.createChild("div","keybinds-shortcut keybinds-list-text");if(this._isEditing){const t=i.createChild("input","harmony-input");t.spellcheck=!1,this._shortcutInputs.set(e,t),this._elementToFocus||(this._elementToFocus=t),t.value=e.title(),t.addEventListener("keydown",this._onShortcutInputKeyDown.bind(this,e,t));const n=i.createChild("button");n.classList.add("keybinds-delete-button"),n.appendChild(y.Icon.create("largeicon-trash-bin")),n.addEventListener("click",()=>{this.element.removeChild(i),s&&this.element.removeChild(s),this._shortcutInputs.delete(e),this._editedShortcuts.set(e,null),this._validateInputs()}),d.setAccessibleName(n,ls`Remove shortcut`)}else{e.descriptors.flatMap(e=>e.name.split(" + ")).forEach(e=>{i.createChild("span","keybinds-key").textContent=e}),Root.Runtime.experiments.isEnabled("keyboardShortcutEditor")&&0===t&&this.element.appendChild(this._createEditButton())}}_createEditButton(){const e=document.createElement("button");return e.classList.add("keybinds-edit-button"),e.appendChild(y.Icon.create("largeicon-edit")),e.addEventListener("click",()=>this._settingsTab.startEditing(this._item)),d.setAccessibleName(e,ls`Edit shortcut`),e}_onShortcutInputKeyDown(e,t,s){if("Tab"!==s.key){const i=v.KeyboardShortcut.makeKeyFromEvent(s),n=v.KeyboardShortcut.keyCodeAndModifiersFromKey(i),r=v.KeyboardShortcut.makeDescriptor({code:i,name:s.key},n.modifiers);t.value=r.name,this._editedShortcuts.set(e,[r]),v.KeyboardShortcut.isModifier(n.keyCode)&&(t.value=t.value.slice(0,t.value.lastIndexOf("+"))),this._validateInputs(),s.consume(!0)}}onEscapeKeyPressed(e){const t=document.deepActiveElement();for(const[s,i]of this._shortcutInputs.entries())t===i&&this._onShortcutInputKeyDown(s,i,e)}_validateInputs(){this._confirmButton.disabled=!1,this._errorMessageElement.classList.add("hidden"),this._shortcutInputs.forEach((e,t)=>{const s=this._editedShortcuts.get(t);if(!s)return;if(v.KeyboardShortcut.isModifier(s[0].key))return this._confirmButton.disabled=!0,e.classList.add("error-input"),d.setInvalid(e,!0),this._errorMessageElement.classList.remove("hidden"),void(this._errorMessageElement.textContent=ls`Shortcuts cannot contain only modifier keys.`);const i=E.ShortcutRegistry.instance().actionsForDescriptors(s).filter(e=>e!==this._item.id());if(i.length){this._confirmButton.disabled=!0,e.classList.add("error-input"),d.setInvalid(e,!0),this._errorMessageElement.classList.remove("hidden");const t=C.ActionRegistry.instance().action(i[0]);this._errorMessageElement.textContent=ls`This shortcut is in use by ${t.title()}.`}else e.classList.remove("error-input"),d.setInvalid(e,!1)})}}var U=Object.freeze({__proto__:null,KeybindsSettingsTab:B,ShortcutListItem:P,KeybindsItem:void 0});export{R as FrameworkBlackboxSettingsTab,U as KeybindsSettingsTab,L as SettingsScreen};
